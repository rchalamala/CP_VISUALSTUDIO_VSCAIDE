<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>bi_edge.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'BiEdge::BiEdge' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>BiEdge::{ctor}</FUNCTION>
    <DECORATED>??0BiEdge@@QAE@ABI@Z</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>chash.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26497</DEFECTCODE>
    <DESCRIPTION>The function 'chash::splitmix64' could be marked constexpr if compile-time evaluation is desired (f.4).</DESCRIPTION>
    <FUNCTION>chash::splitmix64</FUNCTION>
    <DECORATED>?splitmix64@chash@@SA_K_K@Z</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>chash.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'chash::splitmix64' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>chash::splitmix64</FUNCTION>
    <DECORATED>?splitmix64@chash@@SA_K_K@Z</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>chash.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>chash::()</FUNCTION>
    <DECORATED>??Rchash@@QBE_K_K@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>chash.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>chash::()</FUNCTION>
    <DECORATED>??Rchash@@QBE_KU?$pair@_K_K@std@@@Z</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>edge.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Edge::Edge' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Edge::{ctor}</FUNCTION>
    <DECORATED>??0Edge@@QAE@ABI@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>prng.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>getPRNG</FUNCTION>
    <DECORATED>?getPRNG@@YAAAV?$mersenne_twister_engine@_K$0EA@$0BDI@$0JM@$0BP@$0?EKPNJAKFFGJJOGBH@$0BN@$0FFFFFFFFFFFFFFFF@$0BB@$0HBNGHPPPONKGAAAA@$0CF@$0?IBBCAAAAAAAAA@$0CL@$0FIFBPECNEMJFHPCN@@std@@XZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>timer.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Timer::{ctor}</FUNCTION>
    <DECORATED>??0Timer@@QAE@XZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>timer.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Timer::reset' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Timer::reset</FUNCTION>
    <DECORATED>?reset@Timer@@QAEXXZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>timer.cpp</FILENAME>
      <LINE>13</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Timer::elapsed' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Timer::elapsed</FUNCTION>
    <DECORATED>?elapsed@Timer@@QBEOXZ</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>to_string.cpp</FILENAME>
      <LINE>17</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>std::to_string</FUNCTION>
    <DECORATED>?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AB_N@Z</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Rahul\source\repos\cp\cpplib\</FILEPATH>
      <FILENAME>to_string.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>std::to_string</FUNCTION>
    <DECORATED>?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABV?$vector@_NV?$allocator@_N@std@@@1@@Z</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>